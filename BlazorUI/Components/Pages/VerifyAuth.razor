@page "/verifyauth"
@using System.Security.Claims;
@attribute [AllowAnonymous]

<PageTitle>Verify Auth</PageTitle>

<div class="container my-3" style="margin-bottom: 50px;">
    <AuthorizeView Context="AuthContext">
        <NotAuthorized>
            <h3 class="text-center">Not authenticated, please login.</h3>
            <hr />
        </NotAuthorized>
        <Authorized>
            <div class="d-flex justify-content-between">
                @{
                    string? emailClaim = AuthContext.User.Claims.FirstOrDefault(c => c.Type.ToLower().Equals("email"))?.Value;
                    string? usernameClaim = AuthContext.User.Claims.FirstOrDefault(c => c.Type.ToLower().Equals("preferred_username"))?.Value;
                }
                <h5 class="mx-2">Claims - @(emailClaim ?? usernameClaim)</h5>

            </div>
            <table class="table table-striped table-bordered table-responsive">
                <thead>
                    <tr>
                        <th scope="col">Claim</th>
                        <th scope="col">Value</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Claim claim in @AuthContext.User.Claims)
                    {
                        <tr>
                            <td class="p-1">@claim.Type</td>

                            @if (claim.Type.ToLower().Equals("nbf") || claim.Type.ToLower().Equals("exp"))
                            {
                                <td class="p-1" style="word-break: break-all;">
                                    @DateTimeOffset.FromUnixTimeSeconds(long.Parse(claim.Value)).ToLocalTime()
                                </td>
                            }
                            else
                            {
                                <td class="p-1" style="word-break: break-all;">
                                    @{
                                        List<string> groups = claim.Value.Split(',').ToList();
                                        groups.Sort();

                                        foreach (string group in groups)
                                        {
                                            <p class="mb-0">@group</p>
                                        }
                                    }
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </Authorized>
    </AuthorizeView>
    <div class="d-flex justify-content-center">
        <a class="btn btn-primary" href="">Go Home</a>
    </div>
</div>
